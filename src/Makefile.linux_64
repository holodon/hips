# Stide - Makefile

# compiler to use
CC = gcc

# flags to pass compiler
CFLAGS = -g -O0 -Wall -Wextra -pedantic-errors -std=c11

# name for executable
EXE = stide

# space-separated list of libraries, if any,
# each of which should be prefixed with -l
LIBS = -L../lib/linux_64 -lpthread -ldl -lpng -lz -lm

# space-separated list of source files
SRCS = stide.c helpers.c preprocess.c image.c hide.c \
	create.c extract.c sqlite3.c random.c

# automatically generated list of object files
OBJS = $(SRCS:.c=.o)

# default target
all: stide stide_gtk

stide: $(OBJS) Makefile.linux_64
	$(CC) $(CFLAGS) -o ../bin/linux_64/$@ $(OBJS) $(LIBS)
	cp ../db/stide.db ../bin/linux_64/
	cp ../media/cat.png ../bin/linux_64

stide_gtk: stide_gtk.c
	gcc -g -rdynamic  `pkg-config --cflags gtk+-3.0` \
	stide_gtk.c -o ../bin/linux_64/stide_gtk \
		`pkg-config --libs gtk+-3.0`
	cp stide.glade ../bin/linux_64/

# housekeeping
clean:
	rm -f core $(EXE) *.o *.gch

# clear everything
cleanall:
	rm -f core $(EXE) *.o *.gch
	rm -f ../bin/linux_64/stide*
	rm -f ../bin/linux_64/*.png

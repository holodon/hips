# Stide - Makefile

# compiler to use
CC = gcc

# flags to pass compiler
CFLAGS = -g -O0 -Wall -Wextra -pedantic-errors \
	-std=c11 -D_XOPEN_SOURCE=600

# name for executable
EXE = stide

# space-separated list of libraries, if any,
# each of which should be prefixed with -l
LIBS = -L../lib/win_64 -lpthread -ldl -lpng -lz -lm -lsodium

# space-separated list of source files
SRCS = stide.c helpers.c preprocess.c image.c hide.c \
	create.c extract.c sqlite3.c

# automatically generated list of object files
OBJS = $(SRCS:.c=.o)

# default target
all: stide

stide: $(OBJS) Makefile.win_64
	$(CC) $(CFLAGS) -o ../bin/win_64/$@ $(OBJS) $(LIBS)
	cp ../db/stide.db ../bin/win_64/
	cp ../media/cat.png ../bin/win_64/

# housekeeping
clean:
	rm -f core $(EXE) *.o *.gch

# clear everything
cleanall:
	rm -f core $(EXE) *.o *.gch
	rm -f ../bin/win_64/stide*
	rm -f ../bin/win_64/*.png
